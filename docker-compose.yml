

services:
  postgres:
    image: postgres:15
    container_name: user-microservices-db
    environment:
      POSTGRES_DB: UserMicroservices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: user-microservices-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: src/UserApi/Dockerfile
    ports:
      - "5195:8080"  # HTTP port
      - "7251:8081"  # HTTPS port (only used if ENABLE_HTTPS=true)
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${ASPNETCORE_URLS:-http://+:8080}
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=UserMicroservices;Username=postgres;Password=postgres
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD:-}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${CERT_PATH:-}
    volumes:
      - ./https:/https:ro  # Mount the certificate directory as read-only
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
